prepare:
  assign:
    chatId: ${incoming.body.chatId}
    authorId: ${incoming.body.authorId}
    input: ${incoming.body.input}
    res:
      result: ""
  next: get_secrets
get_secrets:
  call: http.get
  args:
    url: http://localhost:8086/secrets-with-priority
  result: secrets
user-defined-2:
  call: http.get
  args:
    url: http://localhost:8086/services/endpoints/currency-get_euro_exchange?type=prod
    body:
      headers: ${new Map([])}
      body: ${new Map([])}
      params: ${new Map([])}
    params:
      type: prod
  result: get_euro_exchange_res
  next: assign-6
assign-6:
  assign:
    given_currency: ${input[0]}
  next: textfield-9
textfield-9:
  assign:
    res:
      result: The conversion from euro to ${given_currency} is
        ${get_euro_exchange_res.response.body.eur[given_currency]}
  next: finishing-step-end-12
finishing-step-end-12:
  template: end-conversation
  requestType: templates
  body:
    message: Service ended
  result: finishing-step-end-12_result
  next: formatMessages
formatMessages:
  call: http.post
  args:
    url: http://data-mapper:3005/hbs/services/bot_responses_to_messages
    headers:
      type: json
    body:
      data:
        botMessages: ${[res]}
        chatId: ${chatId}
        authorId: ${authorId}
        authorFirstName: ""
        authorLastName: ""
        authorTimestamp: ${new Date().toISOString()}
        created: ${new Date().toISOString()}
  result: formatMessage
  next: service-end
service-end:
  return: ${formatMessage.response.body ?? ''}
