{
  "global": {
    "add": "Add",
    "modifiedAt": "Last modified at",
    "addNew": "Add new",
    "dependencies": "Dependencies",
    "language": "Language",
    "search": "Search",
    "notificationError": "Error",
    "active": "Active",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "on": "On",
    "off": "Off",
    "back": "Back",
    "from": "From",
    "to": "To",
    "name": "Name",
    "idCode": "ID code",
    "status": "Status",
    "statusChangeQuestion": "Would you like to change your status to \"present\"?",
    "yes": "Yes",
    "no": "No",
    "removeValidation": "Are you sure?",
    "startDate": "Start date",
    "endDate": "End date",
    "preview": "Preview",
    "logout": "Logout",
    "anonymous": "Anonymous",
    "csaStatus": "Customer support status",
    "present": "Present",
    "away": "Away",
    "today": "Today",
    "forward": "Forward",
    "chosen": "Chosen",
    "read": "Read",
    "title": "Service Module",
    "services": "Services",
    "backhome": "Back to homepage",
    "resultCount": "Results per page",
    "gotoPage": "Go to page",
    "notification": "Notification",
    "paginationNavigation": "Navigate",
    "choose": "Choose..",
    "continue": "Continue",
    "view": "View",
    "save": "Save",
    "testService": "Test service",
    "cancel": "Cancel",
    "close": "Close",
    "common": "Common",
    "errorMessage": "There is no access to the service. Try again later."
  },
  "menu": {
    "overview": "Overview",
    "flowbuilder": "Flow Builder",
    "services": "Services",
    "newService": "New Service",
    "close": "Close menu",
    "intents": "Intents",
    "auto-services": "Automatic Services",
    "faultyServices": "Faulty Services",
    "entities": "Entities",
    "settings": "Settings"
  },
  "mainMenu": {
    "menuLabel": "Main navigation",
    "closeMenu": "Close menu",
    "openIcon": "Open menu icon",
    "closeIcon": "Close menu icon"
  },
  "intents": {
    "entities": "Entities",
    "regex": "Regex",
    "add": "Add",
    "yes": "Yes",
    "no": "No",
    "removeValidation": "Remove Validation",
    "search": "Search",
    "delete": "Delete",
    "deleted": "Deleted",
    "edit": "Edit",
    "save": "Save",
    "cancel": "Cancel",
    "notification": "Notification",
    "notificationError": "Error",
    "entityName": "Name",
    "title": "Title"
  },
  "settings": {
    "title": "Settings",
    "maxUserInputTryCount": "Handle user input try count",
    "users": {
      "title": "Users",
      "name": "Name",
      "idCode": "ID code",
      "role": "Role",
      "displayName": "Display Name",
      "userTitle": "User title",
      "email": "E-mail",
      "addUser": "Add user",
      "editUser": "Edit user",
      "deleteUser": "Delete user",
      "fullName": "First- and lastname",
      "userRoles": "User role(s)",
      "autoCorrector": "Auto corrector",
      "emailNotifications": "Notifications to e-mail",
      "soundNotifications": "Sound notifications",
      "popupNotifications": "Popup notifications",
      "newUnansweredChat": "New unanswered chat",
      "newForwardedChat": "New forwarded chat",
      "useAutocorrect": "Text auto corrector",
      "required": "Required",
      "invalidemail": "Invalid email"
    }
  },
  "overview": {
    "services": "Services",
    "commonServices": "Common Services",
    "create": "Create new service",
    "descriptionCopiedSuccessfully": "Description copied successfully",
    "edit": "Edit",
    "delete": "Delete",
    "cancel": "Cancel",
    "trainingModuleLink": {
      "text": "For the service to be accessible to users a new model needs to be trained. Model training happens on the Training Module page",
      "train": "Train new model"
    },
    "service": {
      "name": "Name",
      "usedCount": "Times service has been triggered",
      "state": "State",
      "linkedIntent": "Linked Intent",
      "states": {
        "active": "Active",
        "inactive": "Inactive",
        "draft": "Draft",
        "ready": "Ready"
      },
      "toast": {
        "deleted": "Service has been successfully deleted",
        "updated": "Service state updated",
        "failed": {
          "delete": "Service deletion failed",
          "state": "Service state update failed",
          "requestConnection": "Connection Request failed",
          "availableIntents": "Failed to retrieve available intents",
          "cancelledConnection": "Connection Request Cancellation failed"
        },
        "requestedConnection": "Connection Requested",
        "cancelledConnection": "Connection Request Cancelled"

      }
    },
    "popup": {
      "delete": "Are you sure that you want to delete the service?",
      "setActive": "Are you sure you want to activate this service?",
      "setReady": "Are you sure you want to mark this service as ready?",
      "setDraft": "Are you sure you want to mark this service as draft?",
      "setInactive": "Are you sure you want to deactivate this service?",
      "setState": "Update state",
      "checking": "Checking if service is connected to an intent",
      "setToDraft": "Set to draft",
      "connectToIntent": "Connect to intent",
      "intentNotConnected": "Service is not connected to an intent, do you want to connect it?",
      "activateService": "Activate service",
      "setToReady": "Set to ready",
      "connect": "Connect",
      "connectServiceToIntent": "Connect service to intent",
      "searchIntents": "Search intents",
      "intent": "Intent",
      "connectionPending": "Connection to intent request is pending, would you like to cancel it?",
      "cancelRequest": "Cancel request",
      "noIntentsAvailable": "No intents available to be connected",
      "connectionQuestion": "Are you sure you want to connect to this intent?",
      "activate": "Activate",
      "deactivate": "Deactivate"
    }
  },
  "connectionRequests": {
    "title": "Connection Requests",
    "approvedConnection": "Connection Approved",
    "declinedConnection": "Connection Declined",
    "toast": {
      "failed": {
        "requests": "Failed to retreive connection requests"
      }
    }
  },
  "newService": {
    "endpoints": "Endpoints",
    "test": "Test URL",
    "isCommon": "Common Service",
    "endpoint": {
      "add": "+ Add API endpoint",
      "addTestEnv": "+ Add test environment",
      "api": "API endpoint",
      "ask": "Ask for endpoints",
      "body": "Body",
      "error": "No response from endpoint. Please check URL and try again",
      "success": "Url is working successfully",
      "headers": "Headers",
      "insert": "Insert API endpoint..",
      "live": "Live endpoint",
      "name": "Endpoint name",
      "params": "Params",
      "required": "Variable is required",
      "single": "Endpoint",
      "testEnv": "Test environment",
      "url": "API endpoint URL",
      "value": "Value",
      "variable": "Variable",
      "unsupported": "Sorry, we currently only support GET and POST requests."
    },
    "saveDraft": "Save draft",
    "trainingModuleSetup": "Training module setup",
    "serviceSetup": "Service setup",
    "serviceFlowCreation": "Service flow creation",
    "name": "Name",
    "description": "Description",
    "uses": "Service uses",
    "toast": {
      "serviceMissingFields": "Service name and description are required",
      "missingFields": "Missing Fields",
      "savedSuccessfully": "Saved Successfully",
      "success": "Success",
      "failed": "Failed",
      "saveFailed": "Failed to save",
      "saveInfoFailed": "Failed to save info",
      "saveConfigFailed": "Failed to save config"
    }
  },
  "serviceFlow": {
    "element": {
      "taraAuthentication": "Tara authorization",
      "textfield": "Send message to client",
      "clientInput": "Client input",
      "openNewWebpage": "Open new webpage",
      "fileGeneration": "File generation",
      "fileSigning": "File signing",
      "conversationEnd": "End conversation",
      "redirectConversationToSupport": "Direct to Customer Support",
      "rules": "Rules",
      "rasaRules": "Rasa Rules",
      "siga": "SiGa"
    },
    "popup": {
      "messageLabel": "Message",
      "availableOutputElementsLabel": "Available output elements",
      "showJsonRequest": "Show JSON request",
      "hideJsonRequest": "Hide JSON request",
      "jsonRequestPlaceholder": "JSON request",
      "openWebpageLabel": "Web page name that is displayed to the user",
      "name": "Name",
      "intent": "Intent",
      "action": "Action",
      "add": "+ Add",
      "yesNoQuestion": "Yes/No Question",
      "insertVariable": "Insert variable",
      "availableVariables": "Available variables",
      "clientSeesMessage": "Client sees message",
      "redirectToCustomerSupport": "Conversation will be redirected to Customer Support",
      "loginWithTARA": "To continue please log in with TARA",
      "endConversation": "This step ends conversation. To continue this step needs to be removed from the flow.",
      "fileName": "File name",
      "fileContent": "File content",
      "fileClientSees": "Text + File link",
      "fileSign": "Do you want to sign this file?",
      "fileSignYesNo": "Do you want to sign this file? Yes/No",
      "serviceEnded": "Service ended",
      "rule": "Rule",
      "and": "AND",
      "or": "OR",
      "not": "NOT",
      "addRule": "+ Rule",
      "addGroup": "+ Group",
      "remove": "Remove",
      "signType": "Sign Type"
    },
    "flow": "Service flow",
    "placeholderNode": "Drag the next step into the flow",
    "allElements": "All elements",
    "setupElements": "Setup elements",
    "tabs": {
      "setup": "Setup",
      "test": "Test"
    },
    "rule": "Rule"
  },
  "logs": {
    "service": "Service",
    "elements": "Elements",
    "problems": "Problems",
    "view": "View",
    "log": "Log",
    "environment": "Environment",
    "method": "Method",
    "errorCode": "Error Code",
    "failedStep": "Failed Step",
    "failedTime": "Date and Time",
    "noErrorMessage": "No error message",
    "errorMessage": "Error Message",
    "headers": "Headers",
    "parameters": "Parameters",
    "body": "Body"
  },
  "toast": {
    "cannot-save-flow": "Cannot Save Flow",
    "missing-textfield-message": "Please enter missing message",
    "missing-website": "Please enter website title and link",
    "missing-file-generation": "Please enter file name and content",
    "missing-client_input-rules": "Please enter client input rules"
  },
  "roles": {
    "ROLE_ADMINISTRATOR": "Administrator",
    "ROLE_SERVICE_MANAGER": "Service manager",
    "ROLE_CUSTOMER_SUPPORT_AGENT": "Customer support",
    "ROLE_CHATBOT_TRAINER": "Chatbot trainer",
    "ROLE_ANALYST": "Analyst",
    "ROLE_UNAUTHENTICATED": "Unauthenticated"
  },
  "chat": {
    "forwarder": "Forwarded",
    "unanswered": "Unanswered",
    "incomplete-service-flow" : "Incomplete Service Flow",
    "no-start-node" : "No Start Node found",
    "end-of-chat": "Reached end of chat",
    "loginWithTARA": "To continue please log in with TARA",
    "fileSignYesNo": "Do you want to sign this file? Yes/No",
    "redirectToCustomerSupport": "Conversation will be redirected to Customer Support",
    "waiting-for-user-input": "Waiting for user input"
  }
}
