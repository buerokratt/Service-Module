version: "3.9"
services:
  ruuter:
    container_name: ruuter
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:3006,http://localhost:3001,http://localhost:8086
      - application.httpCodesAllowList=200,201,202,203,204,205,206,207,208,226
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8086
      - application.DSL.processedFiletypes=.yml,.yaml,.tmp
      - application.openSearchConfiguration.url=http://host.docker.internal:9200
      - application.openSearchConfiguration.index=ruuterlog
    volumes:
      - ./DSL/Ruuter:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8086:8086
    networks:
      - bykstack

  database:
    container_name: database
    image: postgres:14.1
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_MULTIPLE_DATABASES=users_db,services_db
    ports:
      - 5433:5432
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - database
    environment:
      - sqlms.datasources.[0].name=services
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://database:5432/services_db
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=01234
      - logging.level.org.springframework.boot=INFO
      - server.port=8087
    ports:
      - 8087:8087
    volumes:
      - ./DSL/Resql/services:/workspace/app/templates/services
    networks:
      - bykstack

  resql_users:
    container_name: resql-users
    image: resql
    depends_on:
      - database
    environment:
      - server.port=8088
      - sqlms.datasources.[0].name=users
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://database:5432/users_db
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=01234
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8088:8088
    volumes:
      - ./DSL/Resql/users:/workspace/app/templates/users
    networks:
      - bykstack

  data_mapper:
    container_name: data_mapper
    image: data-mapper
    environment:
      - PORT=3005
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/DMapper/hbs:/workspace/app/views/services
      - ./DSL/DMapper/js:/workspace/app/js/services
      - ./DSL/DMapper/lib:/workspace/app/lib
      - ./DSL/DMapper/server/controllers:/workspace/app/services/controllers
      - ./DSL/DMapper/server/js/file:/workspace/app/js/services/file
      - ./DSL/DMapper/server/js/secrets:/workspace/app/js/secrets
      - ./DSL/DMapper/server/js/util:/workspace/app/js/util
      - ./secrets:/data/secrets
    ports:
      - 3005:3005
    networks:
      - bykstack
  node_server:
    container_name: node_server
    build:
      context: ./DSL/Node
      dockerfile: Dockerfile.dev
    environment:
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/Node:/app
      - /app/node_modules
    ports:
      - 3008:3008
    networks:
      - bykstack

  gui_dev:
    container_name: gui_dev
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8086
      - REACT_APP_TRAINING_MODULE_GUI_BASE_URL=http://localhost:3001
      - PORT=3006
      - REACT_APP_APP_PORT=3006
      - REACT_APP_MENU_BASE_URL=http://localhost:8086
      - REACT_APP_MENU_URL=https://admin.dev.buerokratt.ee
      - REACT_APP_RUUTER_V2_SERVICE_API_URL=http://localhost:8086
      - REACT_APP_AUTH_BASE_URL=http://localhost:8086
      - REACT_APP_AUTH_PATH=/auth
      - REACT_APP_MENU_PATH=/chat/menu.json
      - REACT_APP_API_PATH=/
      - REACT_APP_LOCAL=true
      - REACT_APP_RUUTER_API_URL=http://localhost:8086
      - REACT_APP_RUUTER_PRIVATE_API_URL=http://localhost:8086
    build:
      context: ./GUI
      dockerfile: Dockerfile.dev
    ports:
      - 3006:3006
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack

  tim:
    container_name: tim
    image: tim
    depends_on:
      - tim-postgresql
    environment:
      - SECURITY_ALLOWLIST_JWT=ruuter,resql,resql_users,tim,tim-postgresql,node_server,data_mapper,gui_dev,127.0.0.1,::1
    ports:
      - 8085:8085
    networks:
      - bykstack
    extra_hosts:
      - "host.docker.internal:host-gateway"
    cpus: "0.5" # Example CPU limit
    mem_limit: "512M" # Example memory limit

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./tim-db:/var/lib/postgresql/data
    ports:
      - 9876:5432
    networks:
      - bykstack

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - node.name=opensearch
      - discovery.seed_hosts=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - bykstack

volumes:
  opensearch-data1:

networks:
  bykstack:
    name: bykstack
    driver: bridge
